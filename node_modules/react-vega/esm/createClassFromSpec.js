function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import Vega from './Vega';
export default function createClassFromSpec(_ref) {
  let {
    mode,
    spec
  } = _ref;

  class FixedVegaChart extends React.PureComponent {
    render() {
      return /*#__PURE__*/React.createElement(Vega, _extends({
        mode: mode,
        spec: spec
      }, this.props));
    }

  }

  _defineProperty(FixedVegaChart, "getSpec", function getSpec() {
    return spec;
  });

  return FixedVegaChart;
}