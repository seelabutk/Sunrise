import React, { CSSProperties } from 'react';
import { EmbedOptions, VisualizationSpec } from 'vega-embed';
import type { Result } from 'vega-embed';
import { ViewListener, SignalListeners } from './types';
export declare type VegaEmbedProps = {
    className?: string;
    spec: VisualizationSpec;
    signalListeners?: SignalListeners;
    style?: CSSProperties;
    onNewView?: ViewListener;
    onError?: (error: Error, containerRef: HTMLDivElement) => void;
} & EmbedOptions;
export default class VegaEmbed extends React.PureComponent<VegaEmbedProps> {
    containerRef: React.RefObject<HTMLDivElement>;
    resultPromise?: Promise<Result | undefined>;
    componentDidMount(): void;
    componentDidUpdate(prevProps: VegaEmbedProps): void;
    componentWillUnmount(): void;
    handleError: (error: Error) => undefined;
    modifyView: (action: ViewListener) => void;
    createView(): void;
    clearView(): this;
    render(): JSX.Element;
}
//# sourceMappingURL=VegaEmbed.d.ts.map