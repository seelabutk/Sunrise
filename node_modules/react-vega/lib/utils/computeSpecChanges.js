"use strict";

exports.__esModule = true;
exports.default = computeSpecChanges;

var _fastDeepEqual = _interopRequireDefault(require("fast-deep-equal"));

var _getUniqueFieldNames = _interopRequireDefault(require("./getUniqueFieldNames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function computeSpecChanges(newSpec, oldSpec) {
  if (newSpec === oldSpec) return false;
  const changes = {
    width: false,
    height: false,
    isExpensive: false
  };
  const fieldNames = (0, _getUniqueFieldNames.default)([newSpec, oldSpec]);

  if (fieldNames.has('width') && (!('width' in newSpec) || !('width' in oldSpec) || newSpec.width !== oldSpec.width)) {
    if ('width' in newSpec && typeof newSpec.width === 'number') {
      changes.width = newSpec.width;
    } else {
      changes.isExpensive = true;
    }
  }

  if (fieldNames.has('height') && (!('height' in newSpec) || !('height' in oldSpec) || newSpec.height !== oldSpec.height)) {
    if ('height' in newSpec && typeof newSpec.height === 'number') {
      changes.height = newSpec.height;
    } else {
      changes.isExpensive = true;
    }
  } // Delete cheap fields


  fieldNames.delete('width');
  fieldNames.delete('height');

  if ([...fieldNames].some(field => !(field in newSpec) || !(field in oldSpec) || !(0, _fastDeepEqual.default)(newSpec[field], oldSpec[field]))) {
    changes.isExpensive = true;
  }

  return changes.width !== false || changes.height !== false || changes.isExpensive ? changes : false;
}